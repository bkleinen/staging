<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Info 2 WS 2021/22 - Labs and Exercises on STAGING --- Prof. Dr. Barne Kleinen</title><link>https://bkleinen.github.io/staging/classes/ws2021/info2/labs/</link><description>Recent content in Info 2 WS 2021/22 - Labs and Exercises on STAGING --- Prof. Dr. Barne Kleinen</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://bkleinen.github.io/staging/classes/ws2021/info2/labs/index.xml" rel="self" type="application/rss+xml"/><item><title>Info2: Exercise 00: Programming &amp; Tools</title><link>https://bkleinen.github.io/staging/classes/ws2021/info2/labs/lab-00/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/staging/classes/ws2021/info2/labs/lab-00/</guid><description>Learning Goals After this lab you should be able to agree with each of the following statements
I am familiar with programming in IntelliJ:
I can create a new Java project in IntelliJ I remember most of the concepts from A1 Ex1 I can run my new Java project in IntelliJ I am ready to use Git:
I can clone an online repository I can create an empty repository on GitLab I can update my local repository&amp;rsquo;s remotes I can add changes to be committed I can commit changes I can push changes Pre-Lab (Do this BEFORE the lab) 1.</description></item><item><title>Info2: Exercise 01: Application Design</title><link>https://bkleinen.github.io/staging/classes/ws2021/info2/labs/lab-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/staging/classes/ws2021/info2/labs/lab-01/</guid><description>CRC Cards
Learning Goals After this lab you should be able to agree with each of the following statements.
I can use CRC Cards to design an application:
Using the underline methods, I can identify candidates for classes, methods and fields. By working through scenarios I can identify cases where a class needs to be split up. By working through scenarios I can identify cases where classes need to be merged.</description></item><item><title>Info2: Exercise 02: Implementing CRC Cards</title><link>https://bkleinen.github.io/staging/classes/ws2021/info2/labs/lab-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/staging/classes/ws2021/info2/labs/lab-02/</guid><description>Learning Goals After this lab you should be able to agree with each of the following statements. This looks like a lot, but it is all repetition from what you learned in Info1. Ideally you agree with each statement even before starting the lab.
I remember programming concepts concerning classes and objects:
I know the difference between classes and objects. I can instantiate an object. I remember programming concepts concerning fields and variable types:</description></item><item><title>Info2: Exercise 03: Histogram</title><link>https://bkleinen.github.io/staging/classes/ws2021/info2/labs/lab-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/staging/classes/ws2021/info2/labs/lab-03/</guid><description>Learning Goals After this lab you should be able to agree with each of the following statements.
I can handle File-based IO with Java:
I can read from a text file using a Reader, eg. BufferedReader. I can write to a text file using a Writer, eg. BufferedWriter. I close my streams after I finished reading or writing. I can handle Exceptions:
When a method could throw an exception, I know how to handle it with a try-catch-block.</description></item><item><title>Info2: Exercise 04: Chatterbox</title><link>https://bkleinen.github.io/staging/classes/ws2021/info2/labs/lab-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/staging/classes/ws2021/info2/labs/lab-04/</guid><description>Pre-Lab Write down the code for the following questions and be able to explain what is happening.
P1. How do you set up a connection with Sockets between two computers in Java?
P2. Write a method to read from a connection in Java.
P3. Write a method to write to a connection in Java.
P4. How do you create concurrent threads?
Assignment Step 1: Client sends messages to Server Start your chatterbox by writing a method that listens for a Socket connection on a port.</description></item></channel></rss>