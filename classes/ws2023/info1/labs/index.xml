<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Labs and Exercises on STAGING --- Prof. Dr. Barne Kleinen</title><link>https://bkleinen.github.io/staging/classes/ws2023/info1/labs/</link><description>Recent content in Labs and Exercises on STAGING --- Prof. Dr. Barne Kleinen</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://bkleinen.github.io/staging/classes/ws2023/info1/labs/index.xml" rel="self" type="application/rss+xml"/><item><title>KaraClock Complete</title><link>https://bkleinen.github.io/staging/classes/ws2023/info1/labs/karaclock-complete/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/staging/classes/ws2023/info1/labs/karaclock-complete/</guid><description>Open the project https://github.com/htw-imi-info1/kara-clock-lab. It contains several test worlds. Make sure you&amp;rsquo;ve instantiated the correct test world!
Lab 02 0. Count Leaves with act() loop and a field (optional if you skip to 2. Count Leaves but also a good preparation for it)
Open TestWorld4WithMyKara. Make Kara move up to the tree and count the leaves found on it&amp;rsquo;s way. It should move up and count one step with each call to the act() method.</description></item><item><title>Exercise 00: Lab Startup</title><link>https://bkleinen.github.io/staging/classes/ws2023/info1/labs/exercise-00/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/staging/classes/ws2023/info1/labs/exercise-00/</guid><description>This page contains instructions on how you can prepare for the Info1 labs, that is, opening source code in greenfoot (or bluej) and uploading reports to moodle.
Intro Welcome to the laboratory - that&amp;rsquo;s what we call these rooms filled with computer equipment. We have lots of rules for the labs, as they are used by many different people during the week. You find a link to the rules (&amp;ldquo;Laborordnung&amp;rdquo;) here.</description></item><item><title>Exercise 01: Sending Messages to Objects</title><link>https://bkleinen.github.io/staging/classes/ws2023/info1/labs/exercise-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/staging/classes/ws2023/info1/labs/exercise-01/</guid><description>sequenceDiagram actor You create Participant Picture You->>+Picture:new() You->>+Picture:draw() create Participant Circle Picture->>+Circle: new() Circle-->>-Picture:circle Picture->>+Circle: makeVisible() Circle-->>-Picture:void Picture-->>-You:void This week&amp;rsquo;s lab is all about exploring given Objects by sending them messages (aka in Java: calling methods) - and writing your first programs by putting them together in your own methods.
What to bring to lab P1. In the lecture we have talked about data types called int and String. Java has more predefined primitive data types.</description></item><item><title>Exercise 02: TicketMachine</title><link>https://bkleinen.github.io/staging/classes/ws2023/info1/labs/exercise-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/staging/classes/ws2023/info1/labs/exercise-02/</guid><description>Printed Ticket. Sludge G
Source code for this exercise: https://github.com/htw-imi-info1/chapter02
Pre-lab 1. What could be wrong with the following constructor? Don&amp;rsquo;t execute it, think about it in your head.
public TicketMachine (int ticketCost) { int price = ticketCost; balance = 0; total = 0; } 2. How can you tell the difference between a method and a constructor just by looking at its header?
3. What do you think would be printed if you altered the fourth statement of printTicket so that price also has quotes around it, as follows: System.</description></item><item><title>Exercise 03: Book Exercise</title><link>https://bkleinen.github.io/staging/classes/ws2023/info1/labs/exercise-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/staging/classes/ws2023/info1/labs/exercise-03/</guid><description>Books. Abhi Sharma
This week&amp;rsquo;s lab work is intended to practice creating classes with data fields, constructors, methods, assignments and conditional statements.
Pre-lab What to Bring to Lab Please finish these exercises before coming to lab.
P1. Why does the following version of refundBalance not give the same results as what we saw in class?
public int refundBalance() { balance = 0; return balance; } P2.
What happens if you try to compile the TicketMachine class with the following version of refundBalance?</description></item></channel></rss>