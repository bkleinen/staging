<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>info2 on STAGING --- Prof. Dr. Barne Kleinen</title><link>https://bkleinen.github.io/staging/material/courses/info2/</link><description>Recent content in info2 on STAGING --- Prof. Dr. Barne Kleinen</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 03 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://bkleinen.github.io/staging/material/courses/info2/index.xml" rel="self" type="application/rss+xml"/><item><title>Backus-Naur-Form</title><link>https://bkleinen.github.io/staging/material/languages/bnf/</link><pubDate>Fri, 08 Oct 2021 21:32:10 +0200</pubDate><guid>https://bkleinen.github.io/staging/material/languages/bnf/</guid><description>The Gist You might see something like&amp;hellip;.
if your repository is
https://github.com/&amp;lt;organisation&amp;gt;/&amp;lt;repo&amp;gt; the entry in your .git/config would be
[remote &amp;quot;origin&amp;quot;] url = git@github.com:&amp;lt;organisation&amp;gt;/&amp;lt;repo&amp;gt;.git Where \&amp;lt;organisation\&amp;gt; should be replaced with the github organisation, e.g. &amp;ldquo;htw-imi-info2&amp;rdquo; and \&amp;lt;repo\&amp;gt; with the name of the respective git repository, e.g. &amp;ldquo;python-jupyter-notebooks&amp;rdquo;, yielding at this concrete text:
https://github.com/htw-imi-info2/python-jupyter-notebooks [remote &amp;quot;origin&amp;quot;] url = git@github.com:htw-imi-info2/python-jupyter-notebooks.git Rewrite Rules The convention of informally marking placeholders that should be replaced with the delimiters &amp;lt; and &amp;gt; stems from the Backus-Naur-Form (BNF).</description></item><item><title>Working with HTW Machines</title><link>https://bkleinen.github.io/staging/material/ops/hrz/</link><pubDate>Wed, 03 Nov 2021 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/staging/material/ops/hrz/</guid><description>Copy files from your HRZ Home Directory (aka HTW-Space) There are rather verbose manuals about various ways to copy files from your HTW-RZ home directory to somewhere else. (see Freigabe von Dateien und Ordner über den Webdrive )
The gist is: you may connect via SSH File Transfer Protocol to the server webdrive.htw-berlin.de (on default port 22)- see example below. The sftp program used in the example is included in the OpenSSH Package; most probably you&amp;rsquo;ll already have it installed on your computer, e.</description></item><item><title>VI</title><link>https://bkleinen.github.io/staging/material/ops/vi/</link><pubDate>Fri, 08 Oct 2021 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/staging/material/ops/vi/</guid><description>VI You should learn a couple of vi commands to survive, as vi is available on most *nix computers.
The absolute minimum There are two modes in vi: normal and insert. You need to know which mode you are in, as different commands are available. (Why this may be problematic has been discussed thoroughly in the UX field)
Normal Mode: vi starts there get there with ESC start command with: :w write (save) file :q quit (without save, won’t quit if there are changes) :wq quit and save :q!</description></item><item><title>GIT Intro</title><link>https://bkleinen.github.io/staging/material/git-intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/staging/material/git-intro/</guid><description>Source Code Management mit GIT Für Info2 hatte ich im letzten Semester eine GIT-Introduction aufgenomen:
(Zugänglich mit HTW-Login)
Part 1 - Basics and a simple git workflow: Repository anlegen, commit, push, pull, clone Part 2 - committing the right files: git status, git add, index Part 3 - Stolpersteine: andere machen Änderungen! - merge conflicts, vi als editor Part 4 - Adding SSH Keys and copying Repos from Github to Gitlab Seither habe ich gelernt, dass die Beispiele meiner commit messages nicht gut gewählt waren.</description></item></channel></rss>